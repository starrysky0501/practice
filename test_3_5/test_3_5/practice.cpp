//牛客：斐波那契凤尾

//题目描述：
//NowCoder号称自己已经记住了1 - 100000之间所有的斐波那契数。为了考验他，我们随便出一个数n，让他说出第n个斐波那契数。
//当然，斐波那契数会很大。因此，如果第n个斐波那契数不到6位，则说出该数；否则只说出最后6位。
//
//输入描述 :
//输入有多组数据。每组数据一行，包含一个整数n(1≤n≤100000)。
//
//输出描述 :
//对应每一组输入，输出第n个斐波那契数的最后6位。

//#include<iostream>
//using namespace std;
//int main()
//{
//	int arr[100001];
//	arr[0] = 1;
//	arr[1] = 1;
//	for (int i = 2; i<100001; ++i)
//	{
//		arr[i] = arr[i - 1] + arr[i - 2];
//		arr[i] = arr[i] % 1000000;
//	}
//	int n;
//	while (cin >> n)
//	{
//		if (n >= 25)
//		{
//			printf("%06d\n", arr[n]);
//		}
//		else
//		{
//			printf("%d\n", arr[n]);
//		}
//	}
//	return 0;
//}

//该题思路：
//将第1-100000对应的斐波那契数存起来，超过6位数的只打印后6位数，则需和1000000求余
//从第25位斐波那契数列开始，对应的值为6位（包含6位）以上；从第25位斐波那契数开始，当求余后不到6位，则需要格式控制符处理。
//-：代表左对齐   0：给空白位补0