//leetcode：翻转字符串里的单词
//题目描述：
//给定一个字符串，逐个翻转字符串中的每个单词。
//说明：
//无空格字符构成一个单词。
//输入字符串可以在前面或者后面包含多余的空格，但是反转后的字符不能包括。
//如果两个单词间有多余的空格，将反转后单词间的空格减少到只含一个。
//class Solution {
//public:
//	string reverseWords(string s) {
//		int n = s.size();
//		reverse(s.begin(), s.end());
//		int index = 0;  //新的语句的下标值
//		for (int start = 0; start<n; ++start)
//		{
//			if (s[start] != ' ')     //去掉句子最前面的空格
//			{
//				if (index != 0)      //手动给单词之间加上空格
//				{
//					s[index++] = ' ';
//				}
//				int end = start;
//				while (end<n && s[end] != ' ')      
//				{
//					s[index++] = s[end++];         //累计每一个单词
//				}
//				reverse(s.begin() + index - (end - start), s.begin() + index);  //一个单词的长度
//				start = end;
//			}
//		}
//		s.erase(s.begin() + index, s.end());  //句子后面的空格删除
//		return s;
//	}
//};
//index：控制新的字符串的下标
//start,end：控制单词之间的长度，对下标进行<size的限制
//该题思路：
//该题需要处理字符串头和尾的空格以及处理单词之间的多余空格。首先翻转整体字符串，接着for循环控制遍历一遍字符串，
//最初的if条件可以去掉字符串开始的空格，接着我们用3个变量挪动字符串，当在字符串间遇到空格时，我们翻转现有的单词，
//然后我们需要手动为字符串大的单词之间加上空格。最后，在for循环外面对于字符串后面的空格进行处理。采用erase函数删除
//后面多余的空格。难点在于怎样合理的构思去除多余的空格。
//时间复杂度：O(N)，N为字符串的长度
//空间复杂度：O(1)，额外空间用于存放若干变量